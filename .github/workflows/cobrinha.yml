name: Generate Snake

on:
  push:
    # Atualiza a cada push na main
    branches:
      - main      
  schedule:
    # Atualiza a cada 5 horas
    - cron: "0 */5 * * *"
  # Permite executar manualmente pelo Git-Hub Actions
  workflow_dispatch:

jobs:
  generate:
    permissions: 
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      # generates a snake game from a github user (<github_user_name>) contributions graph, output a svg animation at <svg_out_path>
      - name: generate github-contribution-grid-snake.svg
        uses: Platane/snk/svg-only@v3
        with:
          github_user_name: ${{ github.repository_owner }} # Isso já identifica o nome de usuário
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark

          # Com as saídas acima vc pode ter o svg no tema claro e escuro
          
          
      # push the content of <build_dir> to a branch
      # the content will be available at https://raw.githubusercontent.com/<github_user>/<repository>/<target_branch>/<file> , or as github page
      - name: push github-contribution-grid-snake.svg to the output branch
        uses: crazy-max/ghaction-github-pages@v3.1.0
        with:
          target_branch: output
          build_dir: dist
          # Isso manda os svgs para a branch output
          # Se não existir ele cria automáticamente
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # AVISO: LEMBRE-SE DE GERAR O TOKER NO GIT-HUB E SALVAR NOS SEGREDOS DE REPOSITÓRIO
